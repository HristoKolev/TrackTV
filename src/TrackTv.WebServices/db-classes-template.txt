namespace TrackTv.Data
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
	using LinqToDB;
    using LinqToDB.Mapping;

    {{#each model.tables}}
    /// <summary>
    /// <para>Database table '{{TableName}}'.</para>
    /// <para>This class is automatically generated.</para>
    /// </summary>
    [Table(Schema="public", Name = "{{TableName}}")]
    public class {{ClassName}}Poco : IPoco
    {
        {{#each columns}}        
        /// <summary>
		{{#if ColumnComment}}
        {{#each comments}}/// <para>{{this}}</para>{{/each}}
		{{/if}}
		{{#if IsPrimaryKey}}
		/// <para>Primary key column.</para>
		{{/if}}
		/// <para>Column name: '{{ColumnName}}'.</para>
		/// <para>PostgreSQL data type: '{{DataType}}'.</para>
		/// <para>linq2db data type: '{{Linq2dbDataType}}'.</para>
        /// </summary>        
        {{#if IsPrimaryKey}}[PrimaryKey, Identity]{{/if}}{{#unless IsPrimaryKey}}{{#if IsNullable}}[Nullable]{{/if}}{{#unless IsNullable}}[NotNull]{{/unless}}{{/unless}}
		[Column(Name = "{{ColumnName}}", DataType = {{Linq2dbDataType}})]
        public {{ClrType}} {{PropertyName}} { get; set; }
		{{#if IsPrimaryKey}}

		{{ClrType}} IPoco.GetPrimaryKey()
		{
			return this.{{PropertyName}};
		}

		void IPoco.SetPrimaryKey({{ClrType}} value)
		{
			this.{{PropertyName}} = value;
		}

		bool IPoco.IsNew()
		{
			return this.{{PropertyName}} == default;
		}
		{{/if}}
        
        {{/each}}
    }
    
    {{/each}}
    public partial class DbService
    {
		private readonly IReadOnlyDictionary<Type, string> primaryKeyMap = new Dictionary<Type, string>
		{
		{{#each model.tables}}
			{typeof({{ClassName}}Poco), "{{PrimaryKeyColumnName}}"},
        {{/each}}
		};

		private readonly IReadOnlyDictionary<Type, string> tableNameMap = new Dictionary<Type, string>
		{
		{{#each model.tables}}
			{typeof({{ClassName}}Poco), "{{TableName}}"},
        {{/each}}
		};

        {{#each model.tables}}
		/// <summary>
		/// <para>Database table '{{TableName}}'.</para>		
		/// </summary>
        public IQueryable<{{ClassName}}Poco> {{PluralClassName}} => this.DataConnection.GetTable<{{ClassName}}Poco>();
		
        {{/each}}
    }

	public partial interface IDbService
    {
        {{#each model.tables}}
		/// <summary>
		/// <para>Database table '{{TableName}}'.</para>		
		/// </summary>
        IQueryable<{{ClassName}}Poco> {{PluralClassName}} { get; }

        {{/each}}
    }
}
